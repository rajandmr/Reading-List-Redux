{"version":3,"sources":["actions/bookActions.js","components/BookForm.js","components/BookDetails.js","components/BookList.js","App.js","reducers/booksReducer.js","reducers/index.js","index.js"],"names":["GET_BOOKS","ADD_BOOK","connect","dispatch","useState","title","setTitle","author","setAuthor","onSubmit","e","preventDefault","newBook","a","type","payload","addBook","id","placeholder","value","onChange","target","required","BookDetails","book","className","state","books","useEffect","Axios","get","res","data","console","log","length","map","App","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"6PACaA,EAAY,YACZC,EAAW,WCuCTC,cAAQ,KAARA,EArCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,mBAAS,IADF,mBAC1BC,EAD0B,KACnBC,EADmB,OAELF,mBAAS,IAFJ,mBAE1BG,EAF0B,KAElBC,EAFkB,KAejC,OACE,uBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAMFR,EDMmB,SAACS,GAAD,8CAAa,WAAOT,GAAP,SAAAU,EAAA,sDAClCV,EAAS,CACPW,KAAMb,EACNc,QAASH,IAHuB,2CAAb,sDCNVI,CALO,CACdX,QACAE,SACAU,GAAI,KAGNX,EAAS,IACTE,EAAU,KAGV,UACE,uBACEM,KAAK,OACLI,YAAY,aACZC,MAAOd,EACPe,SAAU,SAACV,GAAD,OAAOJ,EAASI,EAAEW,OAAOF,QACnCG,UAAQ,IAEV,uBACER,KAAK,OACLI,YAAY,SACZC,MAAOZ,EACPa,SAAU,SAACV,GAAD,OAAOF,EAAUE,EAAEW,OAAOF,QACpCG,UAAQ,IAGV,uBAAOR,KAAK,SAASK,MAAM,mBCzBlBI,EATK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,+BACE,qBAAKC,UAAU,QAAf,SAAwBD,EAAKnB,QAC7B,qBAAKoB,UAAU,SAAf,SAAyBD,EAAKjB,aCqBrBL,eAJS,SAACwB,GAAD,MAAY,CAClCC,MAAOD,EAAMC,MAAMA,SAGNzB,EArBE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUwB,EAAY,EAAZA,MAI5B,OAHAC,qBAAU,WACRzB,EHJsB,uCAAM,WAAOA,GAAP,iBAAAU,EAAA,+EAEVgB,IAAMC,IACtB,mFAH0B,OAEtBC,EAFsB,OAMtBC,EAAOD,EAAIC,KAAKA,KAEtB7B,EAAS,CACPW,KAAMd,EACNe,QAASiB,IAViB,gDAa5BC,QAAQC,IAAR,MAb4B,yDAAN,yDGKrB,CAAC/B,IACGwB,EAAMQ,OACX,qBAAKV,UAAU,YAAf,SACE,6BACGE,EAAMS,KAAI,SAACZ,GACV,OAAO,cAAC,EAAD,CAAaA,KAAMA,GAAWA,EAAKP,WAKhD,qBAAKQ,UAAU,QAAf,iCCPWY,MATf,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,sCCLOa,EAAe,CAC1BX,MAAO,ICCT,IAIeY,EAJKC,0BAAgB,CAClCb,MDCa,WAAoD,IAA/BD,EAA8B,uDAAtBY,EAAcG,EAAQ,uCAChE,OAAQA,EAAO3B,MACb,KAAKd,EACH,OAAO,2BACF0B,GADL,IAEEC,MAAOc,EAAO1B,UAGlB,KAAKd,EACH,OAAO,2BACFyB,GADL,IAEEC,MAAM,GAAD,mBAAMD,EAAMC,OAAZ,CAAmBc,EAAO1B,YAGnC,QACE,OAAOW,MEPPgB,EAAQC,sBACZJ,EACAK,8BAAoBC,0BAAgBC,OAGtCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.3884945a.chunk.js","sourcesContent":["import Axios from 'axios';\nexport const GET_BOOKS = 'GET_BOOKS';\nexport const ADD_BOOK = 'ADD_BOOk';\n\nexport const fetchBooks = () => async (dispatch) => {\n  try {\n    const res = await Axios.get(\n      'https://fakerapi.it/api/v1/custom?_quantity=5&author=name&id=counter&title=city'\n    );\n\n    const data = res.data.data;\n\n    dispatch({\n      type: GET_BOOKS,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addBook = (newBook) => async (dispatch) => {\n  dispatch({\n    type: ADD_BOOK,\n    payload: newBook,\n  });\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addBook } from '../actions/bookActions';\n\nconst BookForm = ({ dispatch }) => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newBook = {\n      title,\n      author,\n      id: 5,\n    };\n    dispatch(addBook(newBook));\n    setTitle('');\n    setAuthor('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Book title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        required\n      />\n      <input\n        type=\"text\"\n        placeholder=\"author\"\n        value={author}\n        onChange={(e) => setAuthor(e.target.value)}\n        required\n      />\n\n      <input type=\"submit\" value=\"add book\" />\n    </form>\n  );\n};\n\nexport default connect(null)(BookForm);\n","import React from 'react';\n\nconst BookDetails = ({ book }) => {\n  return (\n    <li>\n      <div className=\"title\">{book.title}</div>\n      <div className=\"author\">{book.author}</div>\n    </li>\n  );\n};\n\nexport default BookDetails;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport BookDetails from './BookDetails';\n\nimport { fetchBooks } from '../actions/bookActions';\n\nconst BookList = ({ dispatch, books }) => {\n  useEffect(() => {\n    dispatch(fetchBooks());\n  }, [dispatch]);\n  return books.length ? (\n    <div className=\"book-list\">\n      <ul>\n        {books.map((book) => {\n          return <BookDetails book={book} key={book.id} />;\n        })}\n      </ul>\n    </div>\n  ) : (\n    <div className=\"empty\">No books to read</div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  books: state.books.books,\n});\n\nexport default connect(mapStateToProps)(BookList);\n","import BookForm from './components/BookForm';\nimport BookList from './components/BookList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BookList />\n      <BookForm />\n    </div>\n  );\n}\n\nexport default App;\n","import { GET_BOOKS, ADD_BOOK } from '../actions/bookActions';\n\nexport const initialState = {\n  books: [],\n};\n\nexport default function bookReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_BOOKS:\n      return {\n        ...state,\n        books: action.payload,\n      };\n\n    case ADD_BOOK:\n      return {\n        ...state,\n        books: [...state.books, action.payload],\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport booksReducer from './booksReducer';\n\nconst rootReducer = combineReducers({\n  books: booksReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Imports for Redux\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// root reducer import\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}